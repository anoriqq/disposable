openapi: 3.0.0
info:
  title: Disposable
  description: Disposable GCE easily
  version: 1.0.0
  contact:
    name: Shota Yoshikawa
    email: shota.yoshiakwa@anoriqq.com
  license:
    name: MIT
    url: https://github.com/anoriqq/disposable/blob/master/LICENSE
servers:
  - url: 'http://localhost:8000'
    description: Development server
  - url: 'https://disposable.anoriqq.com'
    description: Production server
components:
  securitySchemes:
    oauth:
      type: oauth2
      description: Google OAuth 2
      flows:
        implicit:
          authorizationUrl: http://localhost:8000/user/auth
          scopes:
            access_instance: read and write access to instance
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Project:
      type: object
      properties:
        createTime:
          type: string
        labels:
          type: object
        lifecycleState:
          type: string
        name:
          type: string
        projectId:
          type: string
        projectNumber:
          type: string
    Instance:
      type: object
      properties:
        cpuPlatform:
          type: string
        creationTimestamp:
          type: string
        description:
          type: string
        disks:
          type: array
          items:
            type: object
            properties:
              autoDelete:
                type: boolean
              boot:
                type: boolean
              deviceName:
                type: string
              diskSizeGb:
                type: string
              interface:
                type: string
              kind:
                type: string
              mode:
                type: string
              source:
                type: string
              type:
                type: string
        hostname:
          type: string
        id:
          type: string
        kind:
          type: string
        labels:
          type: object
        machineType:
          type: string
        metadata:
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
        name:
          type: string
        networkInterfaces:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              network:
                type: string
              networkIP:
                type: string
              subnetwork:
                type: string
        status:
          type: string
        statusMessage:
          type: string
        zone:
          type: string

security:
  - oauth:
      - access_instance

paths:
  /health:
    get:
      description: Health check
      operationId: healthCheck
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /user:
    get:
      description: User Status
      operationId: GetUserStatus
      responses:
        '200':
          description: Return user status
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayName:
                    type: string
                  hasProject:
                    type: boolean
                  hasInstance:
                    type: boolean
        '401':
          description: Require authentication
    delete:
      description: Delete user
      operationId: DeleteUser
      responses:
        '200':
          description: Successfully deleted user
        '401':
          description: Require authentication
  /user/logout:
    get:
      description: Logout from current user
      operationId: LogoutUser
      responses:
        '200':
          description: Successfully logged out
        '401':
          description: Require authentication
  /user/auth:
    get:
      description: Authenticate user with Google OAuth2.0
      operationId: AuthUser
      responses:
        '200':
          description: Redirect to accounts.google.com
        '302':
          description: Redirect to accounts.google.com
  /user/auth/callback:
    get:
      description: Authenticate user with Google OAuth2.0
      operationId: AuthUserCallback
      responses:
        '200':
          description: Redirect to accounts.google.com
        '302':
          description: Redirect to Disposable app
  /project:
    get:
      description: Get project
      operationId: getProject
      responses:
        '200':
          description: Get project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          description: Require authentication
    post:
      description: Create project
      operationId: createProject
      responses:
        '200':
          description: Create project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          description: Require authentication
    delete:
      description: Delete project
      operationId: deleteProject
      responses:
        '200':
          description: Delete project
        '401':
          description: Require authentication
  /instance:
    get:
      description: Instance status
      operationId: getInstanceStatus
      security:
        - oAuthSample:
            - access_instance
      responses:
        '200':
          description: Return instance status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
        '401':
          description: Require authentication
    post:
      description: Create instance
      operationId: createInstance
      security:
        - oAuthSample:
            - access_instance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - region
                - zone
                - machineType
                - imageProject
                - imageFamily
                - diskSizeGb
                - sshPublicKey
              properties:
                region:
                  type: string
                zone:
                  type: string
                machineType:
                  type: string
                imageProject:
                  type: string
                imageFamily:
                  type: string
                diskSizeGb:
                  type: string
                sshPublicKey:
                  type: string
      responses:
        '200':
          description: Successfully request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
        '401':
          description: Require authentication
  /instance/zones:
    get:
      description: List zones
      operationId: listZones
      security:
        - oAuthSample:
            - access_instance
      responses:
        '200':
          description: List zones
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    region:
                      type: string
        '204':
          description: Not content
          content:
            application/json:
              schema:
                type: array
        '401':
          description: Require authentication
